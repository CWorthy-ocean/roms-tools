name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-without-dask:
    name: ${{ matrix.python-version }}-build-without-dask
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Create conda environment
        uses: mamba-org/setup-micromamba@v2
        with:
          cache-downloads: true
          cache-environment: true
          micromamba-version: 'latest'
          environment-file: ci/environment.yml
          create-args: |
            python=${{ matrix.python-version }}
          cache-environment-key: micromamba-${{ matrix.python-version }}-${{ runner.os }}

      - name: Conda info
        run: conda info

      - name: Install roms-tools
        shell: micromamba-shell {0}
        run: |
           python -V
           python -m pip install -e . --force-reinstall

      - name: Running Tests without Dask
        shell: bash -l {0}
        run: |
           python -V
           coverage run --rcfile=coverage.toml -m pytest --verbose roms_tools/tests/*

  test-with-dask:
    name: 3.13-build-with-dask
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Create conda environment
        uses: mamba-org/setup-micromamba@v2
        with:
          cache-downloads: true
          cache-environment: true
          micromamba-version: 'latest'
          environment-file: ci/environment.yml
          create-args: |
            python=${{ matrix.python-version }}
          cache-environment-key: micromamba-${{ matrix.python-version }}-${{ runner.os }}

      - name: Conda info
        run: conda info

      - name: Install roms-tools
        shell: micromamba-shell {0}
        run: |
           python -V
           python -m pip install -e .[dask]  --force-reinstall

      - name: Running Tests with Dask
        shell: bash -l {0}
        run: |
           python -V
           coverage run --rcfile=coverage.toml -m pytest --use_dask --verbose roms_tools/tests/*

  test-with-streaming:
    name: 3.13-build-with-streaming
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Create conda environment
        uses: mamba-org/setup-micromamba@v2
        with:
          cache-downloads: true
          cache-environment: true
          micromamba-version: 'latest'
          environment-file: ci/environment.yml
          create-args: |
            python=${{ matrix.python-version }}
          cache-environment-key: micromamba-${{ matrix.python-version }}-${{ runner.os }}

      - name: Conda info
        run: conda info

      - name: Install roms-tools
        shell: micromamba-shell {0}
        run: |
           python -V
           python -m pip install -e .[stream]  --force-reinstall

      - name: Running Tests with Streaming
        shell: bash -l {0}
        env:
          COPERNICUSMARINE_SERVICE_USERNAME: ${{ secrets.COPERNICUSMARINE_SERVICE_USERNAME }}
          COPERNICUSMARINE_SERVICE_PASSWORD: ${{ secrets.COPERNICUSMARINE_SERVICE_PASSWORD }}
        run: |
           python -V
           copernicusmarine login
           coverage run --rcfile=coverage.toml -m pytest -m stream --stream --use_dask --use_gcsfs --use_copernicus --verbose roms_tools/tests/*

  test-with-dask-and-xesmf:
    name: 3.13-build-with-dask-and-xesmf
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Create conda environment
        uses: mamba-org/setup-micromamba@v2
        with:
          cache-downloads: true
          cache-environment: true
          micromamba-version: 'latest'
          environment-file: ci/environment-with-xesmf.yml
          create-args: |
            python=${{ matrix.python-version }}
          cache-environment-key: micromamba-${{ matrix.python-version }}-${{ runner.os }}

      - name: Conda info
        run: conda info

      - name: Install roms-tools
        shell: micromamba-shell {0}
        run: |
           python -V
           python -m pip install -e .[dask]  --force-reinstall

      - name: Running Tests with Dask and Xesmf
        shell: bash -l {0}
        run: |
           python -V
           coverage run --rcfile=coverage.toml -m pytest --use_dask --verbose roms_tools/tests/*

      - name: Get coverage report
        shell: bash -l {0}
        run: |
          coverage report -m
          coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests # optional
