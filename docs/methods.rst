Methodology
===========

The ROMS-Tools methodology closely follows the methods employed in the `UCLA MATLAB tools <https://github.com/nmolem/ucla-tools/tree/main>`_.

Horizontal Grid
################

The horizontal grid is generated by creating an instance of the :class:`roms_tools.Grid` class. For practical examples, see `this example <grid.ipynb>`_.
The horizontal grid parameters are as follows:

- ``nx``: Number of points in the x-direction (excluding the 2 boundary cells on each end)
- ``ny``: Number of points in the y-direction (excluding the including 2 boundary cells on each end)
- ``size_x``: Size of the domain in the x-direction (in km)
- ``size_y``: Size of the domain in the y-direction (in km)
- ``center_lon``: Longitude of the center of the domain
- ``center_lat``: Latitude of the center of the domain
- ``rot``: Rotation of the grid's x-direction from lines of constant longitude, with positive values being a counter-clockwise rotation

To generate the horizontal grid from these parameters, ``ROMS-Tools`` follows a series of steps to define the domain and coordinate system:

- Given the ``size_x`` and ``size_y`` parameters, the domain is initially oriented to prioritize the x-direction as longer than the y-direction. This may involve swapping ``size_x`` with ``size_y`` and ``nx`` with ``ny``. This step is performed to minimize grid distortion.
- ``nx + 2`` grid points are spaced uniformly in longitude.
- A Mercator projection is applied across the equator to convert latitude degrees into y-coordinates. ``ny + 2`` grid points are spaced uniformly in the y-coordinate. An inverse Mercator projection is then performed to return to geographic coordinates.
- If there was a swap in step 1, the grid is now rotated by 90 degrees back to its original orientation.
- The coordinate system is rotated by the specified angle ``rot`` to align with desired orientation.
- Coordinates are translated to center the grid at the specified longitude ``center_lon`` and latitude ``center_lat``.
- Grid metrics ``pm = 1/dx`` and ``pn = 1/dy`` are computed, where ``dx`` and ``dy`` represent the grid spacing in the x and y directions, respectively.
- The angle between the positive x-axis of the local grid and East is computed to establish the orientation relative to geographic directions.

Topography and Mask
###################

During the grid generation process, when an instance of the :class:roms_tools.Grid class is created, ``ROMS-Tools`` also creates a topography field and a land mask. For practical examples, see `this example <grid.ipynb>`_.
The topography field parameters are as follows:

- ``topography_source``: Data source for the topography
- ``hmin``: Minimum ocean depth in meters

The topography and mask are generated via five steps:

0. The topography from the specified ``topography_source`` is regridded onto the ROMS grid.
1. The mask is defined using the regridded topography from step 0. In this step, the topography is evaluated at each grid point: values smaller than 0.0 meters are classified as land, and values larger than 0.0 meters are classified as ocean.
2. The interpolated topography from step 0 is smoothed over the entire domain with a smoothing factor of 8. This step ensures that the topography is smooth at the grid scale, a prerequisite for avoiding grid-scale instabilities at runtime.
3. The mask is modified by filling enclosed basins with land.
4. Regions where the ocean depth is shallower than ``hmin`` are set to ``hmin``. The topography is then smoothed locally in such a way that the maximum slope parameter ``r`` is smaller than 0.2. The maximum slope parameter is given by

   .. math::
      r = \max \left( \frac{|\Delta_x h|}{2h}, \frac{|\Delta_y h|}{2h} \right).

The local smoothing in step 4 modifies the topography predominantly along the continental shelf.

Here are these steps illustrated for an example domain:

.. image:: images/Step1.png
   :width: 390
.. image:: images/Step2.png
   :width: 390
.. image:: images/Step3.png
   :width: 390
.. image:: images/Step4.png
   :width: 390

Vertical Coordinate System
###########################

During the grid generation process, when an instance of the :class:roms_tools.Grid class is created, ``ROMS-Tools`` also creates a vertical coordinate system, following :cite:t:`shchepetkin_correction_2009` (see also Figure 2 in :cite:t:`lemarie_are_2012`). The vertical coordinate system parameters are as follows:

- ``N``: Number of vertical layers
- ``theta_s``: Surface control parameter
- ``theta_b``: Bottom control parameters
- ``hc``: Critical depth

.. Note, however, that during runtime ROMS will dynamically adjust the vertical coordinate to account for varying sea surface height.


Tidal Forcing
##############

Coming soon...


Surface Forcing
################

Coming soon...


Initial Conditions
##################

.. The initial conditions are created under the assumption of zero sea surface height.

Coming soon...

Boundary Forcing
##################

.. The initial conditions are created under the assumption of zero sea surface height.

Coming soon...
